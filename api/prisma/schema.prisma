generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  description   String        @db.VarChar(255)
  subcategories subcategory[]
}

model subcategory {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  parentId    Int
  description String   @db.VarChar(255)
  parent      category @relation(fields: [parentId], references: [id])
}

model league {
  id            Int                  @id @default(autoincrement())
  name          String               @db.VarChar(255)
  description   String               @db.VarChar(255)
  createdAt     DateTime             @default(now()) @db.DateTime(6)
  category      Int?
  authorId      Int
  author        user                 @relation(fields: [authorId], references: [id])
  championships leagueChampionship[]
  members       leagueMember[]

  @@index([authorId], map: "FK_c1008f689c9f2d4bef8618dee2b")
}

model user {
  id                   Int                  @id @default(autoincrement())
  nickname             String?              @db.VarChar(255)
  name                 String               @db.VarChar(255)
  lastname             String               @db.VarChar(255)
  secondLastname       String?              @db.VarChar(255)
  password             String               @db.VarChar(255)
  createdAt            DateTime             @default(now()) @db.DateTime(6)
  email                String?              @db.VarChar(255)
  leagues              leagueMember[]
  entries              sessionEntry[]
  leaguesCreated       league[]
  championshipsCreated leagueChampionship[]
}

model leagueChampionship {
  id          Int                 @id @default(autoincrement())
  leagueId    Int
  name        String              @db.VarChar(255)
  authorId    Int
  author      user                @relation(fields: [authorId], references: [id])
  description String              @db.VarChar(255)
  createdAt   DateTime            @default(now()) @db.DateTime(6)
  league      league              @relation(fields: [leagueId], references: [id])
  rounds      championshipRound[]
}

model championshipRound {
  id             Int                @id @default(autoincrement())
  championshipId Int
  trackId        Int
  name           String?            @db.VarChar(255)
  description    String?            @db.VarChar(255)
  createdAt      DateTime           @default(now()) @db.DateTime(6)
  championship   leagueChampionship @relation(fields: [championshipId], references: [id])
}

model session {
  id            Int            @id @default(autoincrement())
  trackId       Int
  createdAt     DateTime       @default(now()) @db.DateTime(6)
  track         track          @relation(fields: [trackId], references: [id])
  sessionEntry  sessionEntry[]
  raceSession   raceSession?   @relation(fields: [raceSessionId], references: [id])
  raceSessionId Int?
}

model sessionEntry {
  id            Int     @id @default(autoincrement())
  sessionId     Int     @unique
  session       session @relation(fields: [sessionId], references: [id])
  position      Int
  driver        user    @relation(fields: [driverId], references: [id])
  driverId      Int
  lapsCompleted Int
}

model raceSession {
  id       Int       @id @default(autoincrement())
  laps     Int?
  duration Int // Minutes
  session  session[]
}

model scoreSystem {
  id            Int                   @id @default(autoincrement())
  name          String                @db.VarChar(255)
  description   String                @db.VarChar(255)
  positionScore scoreSystemPosition[]
  extraScore    scoreSystemExtra[]
}

model scoreSystemPosition {
  id       Int         @id @default(autoincrement())
  parent   scoreSystem @relation(fields: [parentId], references: [id])
  position String      @db.VarChar(255)
  score    String      @db.VarChar(255)
  parentId Int
}

model extraScore {
  id               Int                @id @default(autoincrement())
  name             String
  scoreSystemExtra scoreSystemExtra[]
}

model scoreSystemExtra {
  id       Int         @id @default(autoincrement())
  extraId  Int
  score    String      @db.VarChar(255)
  parentId Int
  parent   scoreSystem @relation(fields: [parentId], references: [id])
  extra    extraScore  @relation(fields: [extraId], references: [id])
}

model leagueMember {
  id       Int @id @default(autoincrement())
  leagueId Int
  userId   Int

  league league @relation(fields: [leagueId], references: [id])
  user   user   @relation(fields: [userId], references: [id])
}

model track {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String        @db.VarChar(255)
  country     String        @db.VarChar(3)
  location    String        @db.VarChar(255)
  layouts     trackLayout[]
  session     session[]
}

model trackLayout {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
  parent      track  @relation(fields: [parentId], references: [id])
  parentId    Int
}
